// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  username        String
  email           String   @unique
  password        String
  createdAt       DateTime @default(now())
  role            String   @default("user")
  profileImage    String?
  posts           Post[]
  comment         Comment[]
  likes           Like[]
}

model Post {
  id              Int      @id @default(autoincrement())
  title           String
  content         String   
  author          User     @relation(fields: [authorId], references: [id])
  authorId        Int
  createdAt       DateTime @default(now())
  comments        Comment[]
  likes           Like[]
}

model Comment {
  id              Int      @id @default(autoincrement())
  content         String
  post            Post     @relation(fields: [postId], references: [id])
  postId          Int
  author          User     @relation(fields: [authorId], references: [id])
  authorId        Int
  createdAt       DateTime @default(now())
  likes           Like[]
}

model Like {
  id              Int      @id @default(autoincrement())
  post            Post?    @relation(fields: [postId], references: [id])
  postId          Int?
  comment         Comment? @relation(fields: [commentId], references: [id])
  commentId       Int?
  user            User     @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime @default(now())
}